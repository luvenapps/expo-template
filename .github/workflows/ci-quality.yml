name: Quality CI

on:
  push:
    branches: [main]
    paths-ignore:
      - '**/*.md'
      - '**/*.mdx'
      - 'docs/**'
      - '.editorconfig'
      - '.gitattributes'
      - '.gitignore'
      - '.nvmrc'
      - '.node-version'
      - '.prettierignore'
      - '.prettierrc*'
      - '.eslintrc*'
      - 'CODEOWNERS'
      - 'LICENSE*'
  pull_request:
    paths-ignore:
      - '**/*.md'
      - '**/*.mdx'
      - 'docs/**'
      - '.editorconfig'
      - '.gitattributes'
      - '.gitignore'
      - '.nvmrc'
      - '.node-version'
      - '.prettierignore'
      - '.prettierrc*'
      - '.eslintrc*'
      - 'CODEOWNERS'
      - 'LICENSE*'
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: quality-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality-hosted:
    name: Quality Checks - Hosted Ubuntu
    if: vars.USE_SELF_HOSTED != 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: expo-template-testing
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 24
        uses: actions/setup-node@v4
        with:
          node-version: 24.1.0
          cache: 'npm'

      - name: Scaffold & verify (retry once)
        working-directory: .
        shell: bash
        run: |
          set -euo pipefail
          max=2
          attempt=1
          while [ "$attempt" -le "$max" ]; do
            echo "==> Attempt $attempt/$max: scaffold + verify"
            rm -rf expo-template-testing || true
            npx create-expo-app expo-template-testing --template "$GITHUB_WORKSPACE" --yes
            pushd expo-template-testing >/dev/null
            npx expo --version || true
            node -e "console.log('react-native', require('react-native/package.json').version)" || true
            node -e "console.log('expo', require('expo/package.json').version)" || true
            if npx expo install --check; then
              echo "✅ Expo dependency alignment OK"
              popd >/dev/null
              break
            fi
            popd >/dev/null
            if [ "$attempt" -lt "$max" ]; then
              echo "⚠️ Verification failed. Retrying from scratch..." >&2
              attempt=$((attempt+1))
              continue
            else
              echo "❌ Verification failed after $max attempts." >&2
              exit 1
            fi
          done

      - name: Doctor
        run: npm run doctor
        continue-on-error: true

      - name: Check formatting
        run: npm run format:check

      - name: Lint
        run: npm run lint

      - name: Unit tests
        run: npm run test -- --coverage

      - name: Install GPG
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          slug: luvenapps/expo-template
          flags: quality
          fail_ci_if_error: false
