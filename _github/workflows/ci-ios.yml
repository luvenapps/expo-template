name: iOS CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

env:
  IOS_DEVICE: 'iPhone 17'
  MAESTRO_VERSION: 'v2.0.3'

concurrency:
  group: ios-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ios-quality-hosted:
    name: Format ‚Ä¢ Lint ‚Ä¢ Unit tests (iOS) - Hosted Ubuntu
    if: vars.USE_SELF_HOSTED != 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 24
        uses: actions/setup-node@v4
        with:
          node-version: 24.1.0
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Doctor
        run: npm run doctor
        continue-on-error: true

      - name: Check formatting
        run: npm run format:check

      - name: Lint
        run: npm run lint

      - name: Unit tests
        run: npm run test

  ios-hosted:
    name: Lint ‚Ä¢ Test ‚Ä¢ Build ‚Ä¢ E2E (iOS) - Hosted
    if: vars.USE_SELF_HOSTED != 'true'
    runs-on: macos-latest
    timeout-minutes: 45

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Node 24
        uses: actions/setup-node@v4
        with:
          node-version: 24.1.0
          cache: 'npm'

      - name: Make CI scripts executable
        run: chmod +x .github/scripts/*.sh

      - name: Install deps
        run: npm ci

      - name: Doctor
        run: npm run doctor
        continue-on-error: true

      - name: Verify Expo/RN dependency alignment
        shell: bash
        run: |
          set -e
          npx expo --version || true
          node -e "console.log('react-native', require('react-native/package.json').version)" || true
          node -e "console.log('expo', require('expo/package.json').version)" || true
          # Strict: fail if mismatched so lockfile must be updated in a PR
          if ! npx expo install --check; then
            echo "‚ùå Expo dependency mismatch. Run 'npx expo install --fix' locally and commit the updated package-lock.json."
            exit 1
          fi

      - name: Clear Metro cache
        run: |
          rm -rf "$TMPDIR"/metro-* node_modules/.cache/metro || true

      - name: Cache Maestro CLI
        id: maestro-cache
        uses: actions/cache@v4
        with:
          path: ~/.maestro
          key: maestro-${{ runner.os }}-v1

      - name: Setup Maestro
        if: steps.maestro-cache.outputs.cache-hit != 'true'
        shell: bash
        run: .github/scripts/setup_maestro.sh "${{ env.MAESTRO_VERSION }}"

      - name: Cache CocoaPods
        id: pods-cache
        uses: actions/cache@v4
        with:
          path: ios/Pods
          key: pods-macOS-${{ hashFiles('ios/Podfile.lock') }}
      - name: Save CocoaPods cache (post-build)
        if: always() && steps.pods-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ios/Pods
          key: pods-macOS-${{ hashFiles('ios/Podfile.lock') }}

      - name: Ensure iPhone simulator exists & booted
        shell: bash
        run: .github/scripts/ios_boot_simulator.sh "${{ env.IOS_DEVICE }}"

      - name: Build iOS (Simulator, headless)
        shell: bash
        run: .github/scripts/ios_build.sh

      - name: Upload Xcode build artifacts (hosted)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: xcode-build-artifacts-ios-hosted
          path: |
            ios/build/**/*.xcresult
            ios/build/**/*.log
            ~/Library/Developer/Xcode/DerivedData/**/Logs/Build/*.log
          if-no-files-found: ignore

      - name: Install built app on simulator
        shell: bash
        run: .github/scripts/ios_install_and_warmup.sh

      - name: Run E2E tests
        shell: bash
        run: .github/scripts/ios_run_e2e.sh

      - name: Upload E2E artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-artifacts-ios-hosted
          path: |
            e2e-artifacts/**/*
            ios/build/**/*.log
          include-hidden-files: true

      - name: Fail if E2E failed
        if: always()
        shell: bash
        run: |
          if [ -f e2e-artifacts/EXITCODE ] && [ "$(cat e2e-artifacts/EXITCODE)" != "0" ]; then
            echo "‚ùå E2E failed (see artifacts)."
            exit 1
          fi

      - name: Clean workspace (hosted)
        if: ${{ always() }}
        shell: bash
        run: |
          echo "üßπ Cleaning hosted workspace (removing iOS build artifacts and E2E outputs)..."
          rm -rf ios/build e2e-artifacts || true

  ios-selfhosted:
    name: Lint ‚Ä¢ Test ‚Ä¢ Build ‚Ä¢ E2E (iOS) - Self-hosted
    if: vars.USE_SELF_HOSTED == 'true'
    runs-on: [self-hosted, macos, arm64]
    timeout-minutes: 45
    concurrency:
      group: selfhosted-mobile-${{ github.repository }}
      cancel-in-progress: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 24
        uses: actions/setup-node@v4
        with:
          node-version: 24.1.0
          cache: 'npm'

      - name: Remove stale node_modules (safety)
        run: rm -rf node_modules

      - name: Make CI scripts executable
        run: chmod +x .github/scripts/*.sh

      - name: Install deps
        run: npm ci

      - name: Verify Expo/RN dependency alignment
        shell: bash
        run: |
          npx expo --version || true
          node -e "console.log('react-native', require('react-native/package.json').version)" || true
          node -e "console.log('expo', require('expo/package.json').version)" || true
          # Check (non-fatal) Expo SDK alignment
          npx expo install --check || true

      - name: Clear Metro cache
        run: |
          rm -rf "$TMPDIR"/metro-* node_modules/.cache/metro || true

      - name: Cache Maestro CLI
        id: maestro-cache
        uses: actions/cache@v4
        with:
          path: ~/.maestro
          key: maestro-${{ runner.os }}-v1

      - name: Setup Maestro
        if: steps.maestro-cache.outputs.cache-hit != 'true'
        shell: bash
        run: .github/scripts/setup_maestro.sh "${{ env.MAESTRO_VERSION }}"

      - name: Check formatting
        run: npm run format:check

      - name: Lint
        run: npm run lint

      - name: Unit tests
        run: npm run test

      - name: Doctor
        run: npm run doctor
        continue-on-error: true

      - name: Cache CocoaPods
        id: pods-cache
        uses: actions/cache@v4
        with:
          path: ios/Pods
          key: pods-macOS-${{ hashFiles('ios/Podfile.lock') }}
      - name: Save CocoaPods cache (post-build)
        if: always() && steps.pods-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ios/Pods
          key: pods-macOS-${{ hashFiles('ios/Podfile.lock') }}

      - name: Ensure iPhone simulator exists & booted
        shell: bash
        run: .github/scripts/ios_boot_simulator.sh "${{ env.IOS_DEVICE }}"

      - name: Build iOS (Simulator, headless)
        shell: bash
        run: .github/scripts/ios_build.sh

      - name: Upload Xcode build artifacts (self-hosted)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: xcode-build-artifacts-ios-selfhosted
          path: |
            ios/build/**/*.xcresult
            ios/build/**/*.log
            ~/Library/Developer/Xcode/DerivedData/**/Logs/Build/*.log
          if-no-files-found: ignore

      - name: Install built app on simulator
        shell: bash
        run: .github/scripts/ios_install_and_warmup.sh

      - name: Run E2E tests
        shell: bash
        run: .github/scripts/ios_run_e2e.sh

      - name: Upload E2E artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-artifacts-ios-selfhosted
          path: |
            e2e-artifacts/**/*
            ios/build/**/*.log
          include-hidden-files: true

      - name: Fail if E2E failed
        if: always()
        shell: bash
        run: |
          if [ -f e2e-artifacts/EXITCODE ] && [ "$(cat e2e-artifacts/EXITCODE)" != "0" ]; then
            echo "‚ùå E2E failed (see artifacts)."
            exit 1
          fi

      - name: Clean self-hosted workspace (safe)
        if: ${{ always() }}
        shell: bash
        run: .github/scripts/clean_selfhosted_workspace.sh
